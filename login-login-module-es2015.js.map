{"version":3,"sources":["./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.scss","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.module.ts","./src/app/model/expense.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,0yDAA2uD,E;;;;;;;;;;;;ACA1vD;AAAe,6GAA8C,mJAAmJ,E;;;;;;;;;;;;;;;;;;;;;;;ACAnJ;AACO;AACV;AACjB;AACO;AACiB;AACA;IAOpD,cAAc,SAAd,cAAc;IASzB,YACU,MAAc,EACd,WAAwB,EACxB,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QAVlC,iBAAY,GAAG,KAAK,CAAC;QAErB,cAAS,GAAc,IAAI,wDAAS,CAAC;YACnC,KAAK,EAAE,IAAI,0DAAW,CAAC,iBAAiB,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAClF,QAAQ,EAAE,IAAI,0DAAW,CAAC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAChF,CAAC,CAAC;QAOD,uDAAO,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE;YAC3C,IAAI,UAAU,CAAC,QAAQ,KAAK,KAAK,EAAE;gBACjC,uDAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,8DAAc,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC9D,uDAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,kBAAkB,EAAE,GAAG,EAAE;oBACpD,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAChC,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACvE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,wDAAS,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED,QAAQ,KAAW,CAAC;CACrB;;YA/CQ,sDAAM;YAEN,8EAAW;YACX,8EAAW;;AAOP,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,gOAAqC;;KAEtC,CAAC;GACW,cAAc,CAqC1B;AArC0B;;;;;;;;;;;;;;;;;;;;;;;ACbc;AACM;AACI;AACJ;AACF;AACQ;IAaxC,WAAW,SAAX,WAAW;CAAI;AAAf,WAAW;IATvB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,+DAAc,CAAC;QAC9B,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc,EAAE,CAAC,CAAC;SACjE;KACF,CAAC;GACW,WAAW,CAAI;AAAJ;;;;;;;;;;;;;ACTxB;AAAA;AAAA;AAAA;AAAA,IAAY,WAGX;AAHD,WAAY,WAAW;IACnB,4CAA6B;IAC7B,0CAA2B;AAC/B,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;AAED,IAAY,SAMX;AAND,WAAY,SAAS;IACjB,kCAAqB;IACrB,wCAA2B;IAC3B,qDAAwC;IACxC,2BAAc;IACd,2BAAc;AAClB,CAAC,EANW,SAAS,KAAT,SAAS,QAMpB;AAED,IAAY,YA2BX;AA3BD,WAAY,YAAY;IACpB,6CAAG;IACH,iDAAK;IACL,mDAAM;IACN,mDAAM;IACN,yDAAS;IACT,yDAAS;IACT,6DAAW;IACX,yDAAS;IACT,6DAAW;IACX,uDAAQ;IACR,gDAAI;IACJ,gDAAI;IACJ,wDAAQ;IACR,wDAAQ;IACR,kDAAK;IACL,0DAAS;IACT,sDAAO;IACP,kDAAK;IACL,sDAAO;IACP,wDAAQ;IACR,8DAAW;IACX,8CAAG;IACH,wDAAQ;IACR,oDAAM;IACN,kDAAK;IACL,oDAAM;AACV,CAAC,EA3BW,YAAY,KAAZ,YAAY,QA2BvB","file":"login-login-module-es2015.js","sourcesContent":["export default \"<ion-content>\\n  <ion-grid class=\\\"ion-no-margin\\\">\\n    <ion-row class=\\\"ion-justify-content-center expandHeight\\\">\\n      <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n        <ion-card #loginFormCard id=\\\"loginFormCard\\\">\\n          <ion-card-header>\\n            <ion-card-title class=\\\"ion-text-center\\\">Login</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"doLogin()\\\">\\n              <ion-item-group>\\n                <ion-item lines=\\\"full\\\">\\n                  <ion-input placeholder=\\\"Email\\\" formControlName=\\\"email\\\"></ion-input>\\n                </ion-item>\\n                <ion-item lines=\\\"full\\\">\\n                  <ion-input placeholder=\\\"Password\\\" formControlName=\\\"password\\\"\\n                    [type]=\\\"showPassword ? 'text': 'password'\\\"></ion-input>\\n                  <ion-icon [name]=\\\"showPassword ? 'eye-off': 'eye'\\\" size=\\\"large\\\" (click)=\\\"togglePasswordFieldType()\\\">\\n                  </ion-icon>\\n                </ion-item>\\n                <br>\\n                <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login\\n                </ion-button>\\n                <br />\\n                <ion-button fill=\\\"outline\\\" size=\\\"small\\\" [routerLink]=\\\"['/auth/forgot-password']\\\" color=\\\"warning\\\">Forgot\\n                  Password\\n                </ion-button>\\n                <ion-button fill=\\\"outline\\\" size=\\\"small\\\" [routerLink]=\\\"['/auth/register']\\\" color=\\\"success\\\">\\n                  Register\\n                </ion-button>\\n              </ion-item-group>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { KeyboardResize, Plugins } from '@capacitor/core';\nimport { Router } from '@angular/router';\nimport { AppRoutes } from '../../model/expense';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n  showPassword = false;\n\n  loginForm: FormGroup = new FormGroup({\n    email: new FormControl('test1@gmail.com', [Validators.required, Validators.email]),\n    password: new FormControl('hello123', [Validators.required, Validators.min(8)])\n  });\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private userService: UserService\n  ) {\n    Plugins.Device.getInfo().then((deviceInfo) => {\n      if (deviceInfo.platform !== 'web') {\n        Plugins.Keyboard.setResizeMode({ mode: KeyboardResize.None });\n        Plugins.Keyboard.addListener('keyboardWillShow', () => {\n          console.log('Keyboard Event');\n        });\n      }\n    });\n  }\n\n  doLogin(): void {\n    const { email, password } = this.loginForm.value;\n    this.authService.loginWithEmailAndPassword(email, password).then((res) => {\n      this.userService.setCurrentUser(res.user);\n      this.router.navigateByUrl(AppRoutes.TABS);\n    });\n  }\n\n  togglePasswordFieldType(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  ngOnInit(): void { }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: LoginComponent }])\n  ]\n})\nexport class LoginModule { }\n","\r\nexport interface Expense {\r\n    id: number;\r\n    amount: number;\r\n    description: string;\r\n    type: string;\r\n    createdOn: Date;\r\n}\r\n\r\nexport enum StorageKeys {\r\n    INSTALL_DATE = 'INSTALL_DATE',\r\n    ACTIVE_USER = 'ACTIVE_USER',\r\n}\r\n\r\nexport enum AppRoutes {\r\n    LOGIN = '/auth/login',\r\n    REGISTER = '/auth/register',\r\n    FORGOT_PASSWORD = 'auth/forgot-password',\r\n    TABS = '/tabs',\r\n    AUTH = '/auth'\r\n}\r\n\r\nexport enum ExpenseTypes {\r\n    All,\r\n    Games,\r\n    Movies,\r\n    Sports,\r\n    DiningOut,\r\n    Groceries,\r\n    Electronics,\r\n    Furniture,\r\n    Maintenance,\r\n    Mortgage,\r\n    Pets,\r\n    Rent,\r\n    Services,\r\n    Clothing,\r\n    Gifts,\r\n    Insurance,\r\n    Medical,\r\n    Taxes,\r\n    General,\r\n    Cleaning,\r\n    Electricity,\r\n    Gas,\r\n    Internet,\r\n    Mobile,\r\n    Water,\r\n    Others\r\n}\r\n\r\nexport interface User {\r\n    email: string;\r\n    phoneNumber?: string;\r\n    emailVerified?: boolean;\r\n    photoURL?: string;\r\n    refreshToken?: string;\r\n    metadata: {\r\n        creationTime?: string;\r\n        lastSignInTime?: string;\r\n    };\r\n    isAnonymous?: boolean;\r\n    displayName?: string;\r\n}"],"sourceRoot":"webpack:///"}