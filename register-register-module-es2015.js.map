{"version":3,"sources":["./src/app/auth/register/register.component.html","./src/app/auth/register/register.component.scss","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.module.ts","./src/app/model/expense.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,45EAA61E,E;;;;;;;;;;;;ACA52E;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;ACAtK;AACG;AACe;AAC3B;AACS;IAOrC,iBAAiB,SAAjB,iBAAiB;IAW5B,YAAoB,QAAyB,EAAU,MAAc;QAAjD,aAAQ,GAAR,QAAQ,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QATrE,iBAAY,GAAG,KAAK,CAAC;QAErB,iBAAY,GAAc,IAAI,wDAAS,CAAC;YACtC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvE,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC/E,CAAC,CAAC;IAEsE,CAAC;IAE1E,QAAQ,KAAK,CAAC;IAEd,UAAU;QACR,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACpD,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACjG,OAAO,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,+DAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAChF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;CAEF;;YApCQ,kEAAe;YAEf,sDAAM;;AAQF,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,yOAAwC;;KAEzC,CAAC;GACW,iBAAiB,CA0B7B;AA1B6B;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACM;AACM;AACI;AACV;AACF;IAahC,cAAc,SAAd,cAAc;CAAI;AAAlB,cAAc;IAT1B,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,qEAAiB,CAAC;QACjC,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB,EAAE,CAAC,CAAC;SACpE;KACF,CAAC;GACW,cAAc,CAAI;AAAJ;;;;;;;;;;;;;ACT3B;AAAA;AAAA;AAAA;AAAA,IAAY,WAGX;AAHD,WAAY,WAAW;IACnB,4CAA6B;IAC7B,0CAA2B;AAC/B,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;AAED,IAAY,SAMX;AAND,WAAY,SAAS;IACjB,kCAAqB;IACrB,wCAA2B;IAC3B,qDAAwC;IACxC,2BAAc;IACd,2BAAc;AAClB,CAAC,EANW,SAAS,KAAT,SAAS,QAMpB;AAED,IAAY,YA2BX;AA3BD,WAAY,YAAY;IACpB,6CAAG;IACH,iDAAK;IACL,mDAAM;IACN,mDAAM;IACN,yDAAS;IACT,yDAAS;IACT,6DAAW;IACX,yDAAS;IACT,6DAAW;IACX,uDAAQ;IACR,gDAAI;IACJ,gDAAI;IACJ,wDAAQ;IACR,wDAAQ;IACR,kDAAK;IACL,0DAAS;IACT,sDAAO;IACP,kDAAK;IACL,sDAAO;IACP,wDAAQ;IACR,8DAAW;IACX,8CAAG;IACH,wDAAQ;IACR,oDAAM;IACN,kDAAK;IACL,oDAAM;AACV,CAAC,EA3BW,YAAY,KAAZ,YAAY,QA2BvB","file":"register-register-module-es2015.js","sourcesContent":["export default \"<ion-content>\\n  <ion-grid>\\n      <ion-row class=\\\"ion-justify-content-center expandHeight\\\">\\n          <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-card #registerCard id=\\\"registerCard\\\">\\n                  <ion-card-header>\\n                      <ion-card-title class=\\\"ion-text-center\\\">Register</ion-card-title>\\n                  </ion-card-header>\\n                  <ion-card-content>\\n                      <form [formGroup]=\\\"registerForm\\\">\\n                          <ion-item-group>\\n                              <ion-item lines=\\\"full\\\">\\n                                  <ion-input placeholder=\\\"Name\\\" formControlName=\\\"name\\\" type=\\\"text\\\" inputmode=\\\"text\\\"></ion-input>\\n                              </ion-item>\\n                              <ion-item lines=\\\"full\\\">\\n                                  <ion-input placeholder=\\\"Email\\\" formControlName=\\\"email\\\" type=\\\"email\\\" inputmode=\\\"email\\\"></ion-input>\\n                              </ion-item>\\n                              <ion-item lines=\\\"full\\\">\\n                                    <ion-input placeholder=\\\"Password\\\" formControlName=\\\"password\\\"\\n                                             [type]=\\\"showPassword ? 'text': 'password'\\\"></ion-input>\\n                                  <ion-icon [name]=\\\"showPassword ? 'eye-off': 'eye'\\\" size=\\\"large\\\"\\n                                            (click)=\\\"togglePasswordFieldType()\\\"></ion-icon>\\n                              </ion-item>\\n                              <ion-item lines=\\\"full\\\">\\n                                   <ion-input placeholder=\\\"Confirm Password\\\" formControlName=\\\"passwordConfirm\\\"\\n                                             [type]=\\\"showPassword ? 'text': 'password'\\\"></ion-input>\\n                              </ion-item>\\n                              <ion-button expand=\\\"block\\\" (click)=\\\"doRegister()\\\" [disabled]=\\\"!registerForm.valid\\\"> Register\\n                              </ion-button>\\n                              <ion-button fill=\\\"outline\\\" size=\\\"small\\\" color=\\\"success\\\" [routerLink]=\\\"['/auth/login']\\\">Login\\n                              </ion-button>\\n                          </ion-item-group>\\n                      </form>\\n                  </ion-card-content>\\n              </ion-card>\\n          </ion-col>\\n      </ion-row>\\n  </ion-grid>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppRoutes } from 'src/app/model/expense';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n\n  showPassword = false;\n\n  registerForm: FormGroup = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.email, Validators.required]),\n    password: new FormControl('', [Validators.min(8), Validators.required]),\n    passwordConfirm: new FormControl('', [Validators.min(8), Validators.required])\n  });\n\n  constructor(private fireAuth: AngularFireAuth, private router: Router) { }\n\n  ngOnInit() { }\n\n  doRegister() {\n    const { email, password } = this.registerForm.value;\n    email && password && this.fireAuth.createUserWithEmailAndPassword(email, password).then(response => {\n      return response !== null ? this.router.navigateByUrl(AppRoutes.LOGIN) : false;\n    });\n  }\n\n  togglePasswordFieldType(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register.component';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\n\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: RegisterComponent }])\n  ]\n})\nexport class RegisterModule { }\n","\r\nexport interface Expense {\r\n    id: number;\r\n    amount: number;\r\n    description: string;\r\n    type: string;\r\n    createdOn: Date;\r\n}\r\n\r\nexport enum StorageKeys {\r\n    INSTALL_DATE = 'INSTALL_DATE',\r\n    ACTIVE_USER = 'ACTIVE_USER',\r\n}\r\n\r\nexport enum AppRoutes {\r\n    LOGIN = '/auth/login',\r\n    REGISTER = '/auth/register',\r\n    FORGOT_PASSWORD = 'auth/forgot-password',\r\n    TABS = '/tabs',\r\n    AUTH = '/auth'\r\n}\r\n\r\nexport enum ExpenseTypes {\r\n    All,\r\n    Games,\r\n    Movies,\r\n    Sports,\r\n    DiningOut,\r\n    Groceries,\r\n    Electronics,\r\n    Furniture,\r\n    Maintenance,\r\n    Mortgage,\r\n    Pets,\r\n    Rent,\r\n    Services,\r\n    Clothing,\r\n    Gifts,\r\n    Insurance,\r\n    Medical,\r\n    Taxes,\r\n    General,\r\n    Cleaning,\r\n    Electricity,\r\n    Gas,\r\n    Internet,\r\n    Mobile,\r\n    Water,\r\n    Others\r\n}\r\n\r\nexport interface User {\r\n    email: string;\r\n    phoneNumber?: string;\r\n    emailVerified?: boolean;\r\n    photoURL?: string;\r\n    refreshToken?: string;\r\n    metadata: {\r\n        creationTime?: string;\r\n        lastSignInTime?: string;\r\n    };\r\n    isAnonymous?: boolean;\r\n    displayName?: string;\r\n}"],"sourceRoot":"webpack:///"}