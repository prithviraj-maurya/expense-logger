{"version":3,"sources":["webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/login/login.component.scss","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.module.ts","webpack:///src/app/model/expense.ts"],"names":["LoginComponent","router","authService","userService","showPassword","loginForm","email","required","password","min","Device","getInfo","then","deviceInfo","platform","Keyboard","setResizeMode","mode","None","addListener","console","log","value","loginWithEmailAndPassword","res","setCurrentUser","user","navigateByUrl","TABS","selector","template","LoginModule","declarations","imports","forChild","path","component","StorageKeys","AppRoutes","ExpenseTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFA,cAAc;AASzB,gCACUC,MADV,EAEUC,WAFV,EAGUC,WAHV,EAGkC;AAAA;;AAFxB,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAVV,eAAAC,YAAA,GAAe,KAAf;AAEA,eAAAC,SAAA,GAAuB,IAAI,wDAAJ,CAAc;AACnCC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,iBAAhB,EAAmC,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWD,KAAjC,CAAnC,CAD4B;AAEnCE,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,UAAhB,EAA4B,CAAC,0DAAWD,QAAZ,EAAsB,0DAAWE,GAAX,CAAe,CAAf,CAAtB,CAA5B;AAFyB,WAAd,CAAvB;;AAUE,kEAAQC,MAAR,CAAeC,OAAf,GAAyBC,IAAzB,CAA8B,UAACC,UAAD,EAAgB;AAC5C,gBAAIA,UAAU,CAACC,QAAX,KAAwB,KAA5B,EAAmC;AACjC,sEAAQC,QAAR,CAAiBC,aAAjB,CAA+B;AAAEC,oBAAI,EAAE,+DAAeC;AAAvB,eAA/B;;AACA,sEAAQH,QAAR,CAAiBI,WAAjB,CAA6B,kBAA7B,EAAiD,YAAM;AACrDC,uBAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,eAFD;AAGD;AACF,WAPD;AAQD;;AAtBwB;AAAA;AAAA,oCAwBlB;AAAA;;AAAA,wCACuB,KAAKhB,SAAL,CAAeiB,KADtC;AAAA,gBACGhB,KADH,yBACGA,KADH;AAAA,gBACUE,QADV,yBACUA,QADV;AAEL,iBAAKN,WAAL,CAAiBqB,yBAAjB,CAA2CjB,KAA3C,EAAkDE,QAAlD,EAA4DI,IAA5D,CAAiE,UAACY,GAAD,EAAS;AACxE,mBAAI,CAACrB,WAAL,CAAiBsB,cAAjB,CAAgCD,GAAG,CAACE,IAApC;;AACA,mBAAI,CAACzB,MAAL,CAAY0B,aAAZ,CAA0B,yDAAUC,IAApC;AACD,aAHD;AAID;AA9BwB;AAAA;AAAA,oDAgCF;AACrB,iBAAKxB,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACD;AAlCwB;AAAA;AAAA,qCAoCjB,CAAY;AApCK;;AAAA;AAAA,S;;;;gBAVlB;;gBAEA;;gBACA;;;;AAOIJ,oBAAc,6DAL1B,gEAAU;AACT6B,gBAAQ,EAAE,WADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,sGAFS;;;;AAAA,OAAV,CAK0B,GAAd9B,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKA+B,WAAW;AAAA;AAAA,O;;AAAXA,iBAAW,6DATvB,+DAAS;AACRC,oBAAY,EAAE,CAAC,+DAAD,CADN;AAERC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,6DAAaC,QAAb,CAAsB,CAAC;AAAEC,cAAI,EAAE,EAAR;AAAYC,mBAAS,EAAE;AAAvB,SAAD,CAAtB,CAJO;AAFD,OAAT,CASuB,GAAXL,WAAW,CAAX;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAYM,WAAZ;;AAAA,iBAAYA,WAAZ,EAAuB;AACnB;AACA;AACH,OAHD,EAAYA,WAAW,KAAXA,WAAW,MAAvB;;AAKA,UAAYC,SAAZ;;AAAA,iBAAYA,SAAZ,EAAqB;AACjB;AACA;AACA;AACA;AACA;AACH,OAND,EAAYA,SAAS,KAATA,SAAS,MAArB;;AAQA,UAAYC,YAAZ;;AAAA,iBAAYA,YAAZ,EAAwB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OA3BD,EAAYA,YAAY,KAAZA,YAAY,MAAxB","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <ion-grid class=\\\"ion-no-margin\\\">\\n    <ion-row class=\\\"ion-justify-content-center expandHeight\\\">\\n      <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n        <ion-card #loginFormCard id=\\\"loginFormCard\\\">\\n          <ion-card-header>\\n            <ion-card-title class=\\\"ion-text-center\\\">Login</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"doLogin()\\\">\\n              <ion-item-group>\\n                <ion-item lines=\\\"full\\\">\\n                  <ion-input placeholder=\\\"Email\\\" formControlName=\\\"email\\\"></ion-input>\\n                </ion-item>\\n                <ion-item lines=\\\"full\\\">\\n                  <ion-input placeholder=\\\"Password\\\" formControlName=\\\"password\\\"\\n                    [type]=\\\"showPassword ? 'text': 'password'\\\"></ion-input>\\n                  <ion-icon [name]=\\\"showPassword ? 'eye-off': 'eye'\\\" size=\\\"large\\\" (click)=\\\"togglePasswordFieldType()\\\">\\n                  </ion-icon>\\n                </ion-item>\\n                <br>\\n                <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login\\n                </ion-button>\\n                <br />\\n                <ion-button fill=\\\"outline\\\" size=\\\"small\\\" [routerLink]=\\\"['/auth/forgot-password']\\\" color=\\\"warning\\\">Forgot\\n                  Password\\n                </ion-button>\\n                <ion-button fill=\\\"outline\\\" size=\\\"small\\\" [routerLink]=\\\"['/auth/register']\\\" color=\\\"success\\\">\\n                  Register\\n                </ion-button>\\n              </ion-item-group>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { KeyboardResize, Plugins } from '@capacitor/core';\nimport { Router } from '@angular/router';\nimport { AppRoutes } from '../../model/expense';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n  showPassword = false;\n\n  loginForm: FormGroup = new FormGroup({\n    email: new FormControl('test1@gmail.com', [Validators.required, Validators.email]),\n    password: new FormControl('hello123', [Validators.required, Validators.min(8)])\n  });\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private userService: UserService\n  ) {\n    Plugins.Device.getInfo().then((deviceInfo) => {\n      if (deviceInfo.platform !== 'web') {\n        Plugins.Keyboard.setResizeMode({ mode: KeyboardResize.None });\n        Plugins.Keyboard.addListener('keyboardWillShow', () => {\n          console.log('Keyboard Event');\n        });\n      }\n    });\n  }\n\n  doLogin(): void {\n    const { email, password } = this.loginForm.value;\n    this.authService.loginWithEmailAndPassword(email, password).then((res) => {\n      this.userService.setCurrentUser(res.user);\n      this.router.navigateByUrl(AppRoutes.TABS);\n    });\n  }\n\n  togglePasswordFieldType(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  ngOnInit(): void { }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: LoginComponent }])\n  ]\n})\nexport class LoginModule { }\n","\r\nexport interface Expense {\r\n    id: number;\r\n    amount: number;\r\n    description: string;\r\n    type: string;\r\n    createdOn: Date;\r\n}\r\n\r\nexport enum StorageKeys {\r\n    INSTALL_DATE = 'INSTALL_DATE',\r\n    ACTIVE_USER = 'ACTIVE_USER',\r\n}\r\n\r\nexport enum AppRoutes {\r\n    LOGIN = '/auth/login',\r\n    REGISTER = '/auth/register',\r\n    FORGOT_PASSWORD = 'auth/forgot-password',\r\n    TABS = '/tabs',\r\n    AUTH = '/auth'\r\n}\r\n\r\nexport enum ExpenseTypes {\r\n    All,\r\n    Games,\r\n    Movies,\r\n    Sports,\r\n    DiningOut,\r\n    Groceries,\r\n    Electronics,\r\n    Furniture,\r\n    Maintenance,\r\n    Mortgage,\r\n    Pets,\r\n    Rent,\r\n    Services,\r\n    Clothing,\r\n    Gifts,\r\n    Insurance,\r\n    Medical,\r\n    Taxes,\r\n    General,\r\n    Cleaning,\r\n    Electricity,\r\n    Gas,\r\n    Internet,\r\n    Mobile,\r\n    Water,\r\n    Others\r\n}\r\n\r\nexport interface User {\r\n    email: string;\r\n    phoneNumber?: string;\r\n    emailVerified?: boolean;\r\n    photoURL?: string;\r\n    refreshToken?: string;\r\n    metadata: {\r\n        creationTime?: string;\r\n        lastSignInTime?: string;\r\n    };\r\n    isAnonymous?: boolean;\r\n    displayName?: string;\r\n}"]}